{"version":3,"sources":["redux/reducers/ticketInfo.js","redux/rootReducer.js","redux/store.js","components/common/navbar.jsx","redux/actions/ticketInfo.js","components/common/inputText.jsx","components/ticketBuilder/ticketBuilder.jsx","components/ticketBuilder/ticketDisplay.jsx","App.js","index.js"],"names":["initialState","expectedBehaviour","observedBehaviour","rootReducer","combineReducers","ticketInfo","state","action","type","Object","assign","payload","store","createStore","window","Navbar","AppBar","position","color","Toolbar","IconButton","edge","Typography","variant","Component","updatedExpectedBehaviour","updatedObservedBehaviour","InputText","dispatchToStore","id","props","dispatch","value","TextField","className","this","label","onChange","e","preventDefault","target","connect","TicketBuilder","class","TicketDisplay","Paper","elevation","App","ReactDOM","render","document","getElementById"],"mappings":"8PAAIA,EAAe,CACfC,kBAAmB,GACnBC,kBAAmB,ICIvB,IAIeC,EAJKC,YAAgB,CAChCC,WDFW,WAAmD,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCAC7D,OAAQA,EAAOC,MACX,IAAK,6BACD,OAAOC,OAAOC,OAAO,GAAIJ,EAAO,CAC5BL,kBAAmBM,EAAOI,UAElC,IAAK,6BACD,OAAOF,OAAOC,OAAO,GAAIJ,EAAO,CAC5BJ,kBAAmBK,EAAOI,UAElC,QACI,OAAOL,MEXbM,EAAQC,YAAYV,GAC1BW,OAAOF,MAAQA,EAEAA,Q,yGCaAG,E,iLAfP,OACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC5B,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQH,MAAM,WAC3B,kBAAC,IAAD,OAEJ,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAApB,a,GARCC,a,sBCJd,SAASC,EAAyBd,GACrC,MAAO,CACHH,KAAM,6BACNG,WAID,SAASe,EAAyBf,GACrC,MAAO,CACHH,KAAM,6BACNG,W,ICJFgB,E,2MACFC,gBAAkB,SAACjB,GACf,OAAQA,EAAQkB,IACZ,IAAK,qBAAsB,OAAO,EAAKC,MAAMC,SAASN,EAAyBd,EAAQqB,QACvF,IAAK,qBAAsB,OAAO,EAAKF,MAAMC,SAASL,EAAyBf,EAAQqB,U,wEAGrF,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,gBAAgBL,GAAIM,KAAKL,MAAMM,MAAOA,MAAOD,KAAKL,MAAMM,MAAOlB,MAAM,YAAYmB,SAAU,SAACC,GAAQA,EAAEC,iBAAkB,EAAKX,gBAAgBU,EAAEE,e,GATxJhB,aAcTiB,cAAQ,KAARA,CAAcd,GCHde,E,iLAXP,OACI,yBAAKb,GAAG,qBACJ,uBAAGc,MAAM,SAAT,eACA,kBAAC,EAAD,CAAWP,MAAM,uBACjB,kBAAC,EAAD,CAAWA,MAAM,4B,GANLZ,a,QCCtBoB,G,uLAEE,OACI,kBAACC,EAAA,EAAD,CAAOhB,GAAG,oBAAoBiB,UAAW,GACrC,uBAAGZ,UAAU,UAAb,0BACA,2BAAIC,KAAKL,MAAM7B,mBAAqB,kCACpC,uBAAGiC,UAAU,UAAb,0BACA,2BAAIC,KAAKL,MAAM5B,mBAAqB,uC,GAPxBsB,cAoBbiB,eAPS,SAACnC,GACrB,MAAO,CACHL,kBAAmBK,EAAMD,WAAWJ,kBACpCC,kBAAmBI,EAAMD,WAAWH,qBAI7BuC,CAAyBG,GCRzBG,E,iLAVX,OACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUV,a,MCElBwB,IAASC,OACJ,kBAAC,IAAD,CAAUrC,MAAOA,GACd,kBAAE,EAAF,OACUsC,SAASC,eAAe,W","file":"static/js/main.e631d908.chunk.js","sourcesContent":["let initialState = {\n    expectedBehaviour: \"\",\n    observedBehaviour: \"\",\n}\n\nexport default function ticketInfo(state = initialState, action) {\n    switch (action.type) {\n        case \"UPDATED_EXPECTED_BEHAVIOUR\":\n            return Object.assign({}, state, {\n                expectedBehaviour: action.payload\n            })\n        case \"UPDATED_OBSERVED_BEHAVIOUR\":\n            return Object.assign({}, state, {\n                observedBehaviour: action.payload\n            })\n        default:\n            return state;\n    }\n}","import {\n    combineReducers\n} from 'redux';\n\nimport ticketInfo from './reducers/ticketInfo'\n\nconst rootReducer = combineReducers({\n    ticketInfo,\n});\n\nexport default rootReducer;","import {\n    createStore\n} from 'redux';\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer);\nwindow.store = store;\n\nexport default store;","import React, { Component } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <AppBar position=\"static\" color=\"primary\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\">\n                        QAB\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default Navbar;","export function updatedExpectedBehaviour(payload) {\n    return {\n        type: \"UPDATED_EXPECTED_BEHAVIOUR\",\n        payload\n    }\n}\n\nexport function updatedObservedBehaviour(payload) {\n    return {\n        type: \"UPDATED_OBSERVED_BEHAVIOUR\",\n        payload\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextField } from '@material-ui/core'\nimport '../../scss/components/common/inputText.scss';\nimport { updatedTicketName, updatedExpectedBehaviour, updatedObservedBehaviour } from '../../redux/actions/ticketInfo';\n\nclass InputText extends Component {\n    dispatchToStore = (payload) => {\n        switch (payload.id) {\n            case \"Expected behaviour\": return this.props.dispatch(updatedExpectedBehaviour(payload.value));\n            case \"Observed behaviour\": return this.props.dispatch(updatedObservedBehaviour(payload.value));\n        }\n    }\n    render() {\n        return (\n            <TextField className=\"inputText-div\" id={this.props.label} label={this.props.label} color=\"secondary\" onChange={(e) => { e.preventDefault(); this.dispatchToStore(e.target) }} />\n        )\n    }\n}\n\nexport default connect(null)(InputText);","import React, { Component } from 'react';\nimport '../../scss/components/ticketBuilder/ticketBuilder.scss'\nimport InputText from '../common/inputText'\n\nclass TicketBuilder extends Component {\n    render() {\n        return (\n            <div id=\"ticketBuilder-div\">\n                <p class=\"title\">Ticket info</p>\n                <InputText label=\"Expected behaviour\" />\n                <InputText label=\"Observed behaviour\" />\n            </div>\n        )\n    }\n}\n\n\nexport default TicketBuilder;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Paper } from '@material-ui/core'\nimport '../../scss/components/ticketBuilder/ticketDisplay.scss'\n\nclass TicketDisplay extends Component {\n    render() {\n        return (\n            <Paper id=\"ticketDisplay-div\" elevation={3}>\n                <p className=\"header\">h1. Expected behaviour</p>\n                <p>{this.props.expectedBehaviour || \"Type the expected behaviour...\"}</p>\n                <p className=\"header\">h1. Observed behaviour</p>\n                <p>{this.props.observedBehaviour || \"Type the observed behaviour...\"}</p>\n            </Paper>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        expectedBehaviour: state.ticketInfo.expectedBehaviour,\n        observedBehaviour: state.ticketInfo.observedBehaviour,\n    }\n}\n\nexport default connect(mapStateToProps)(TicketDisplay);\n\n","import React, { Component } from 'react';\nimport Navbar from './components/common/navbar'\nimport TicketBuilder from './components/ticketBuilder/ticketBuilder'\nimport TicketDisplay from './components/ticketBuilder/ticketDisplay'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <TicketBuilder />\n        <TicketDisplay />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/index.scss'\n\nReactDOM.render\n    (<Provider store={store}>\n        < App />\n    </Provider >, document.getElementById('root'));"],"sourceRoot":""}